import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spotless)
}

group = 'org.magnasoft'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent
}

dependencies {
    compileOnly(libs.findBugs)
    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation(libs.jacocoCore)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.junit.jupiter:junit-jupiter")
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    implementation 'org.slf4j:slf4j-api'
    implementation 'ch.qos.logback:logback-classic'

    mockitoAgent('org.mockito:mockito-core') {
        transitive = false
    }
    mockitoAgent platform(SpringBootPlugin.BOM_COORDINATES)
}

tasks {
    test {
        // see: https://javadoc.io/static/org.mockito/mockito-core/5.14.2/org/mockito/Mockito.html#0.3
        jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
    }
}

tasks.test {
    useJUnitPlatform()
}

tasks.named("bootJar") {
    archiveClassifier = 'boot'
}

test {
    testLogging {
        events 'failed'
        exceptionFormat 'full' // Shows full stack traces and causes
        showCauses true
        showStackTraces true
        showStandardStreams true // Shows System.out/System.err output
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'
        trimTrailingWhitespace()
        leadingTabsToSpaces()
        endWithNewline()
    }

    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
